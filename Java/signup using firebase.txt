package com.example.homerecomendation;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.Toast;

import com.airbnb.lottie.LottieAnimationView;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.android.material.bottomsheet.BottomSheetDialog;
import com.google.android.material.textfield.TextInputLayout;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.util.HashMap;
import java.util.jar.Attributes;

public class signuppage extends AppCompatActivity {

    LottieAnimationView lottie;
    private TextInputLayout name,email,pass,address,phone;
    private Button Signup;
    private TextView alreadyhvee;
    private FirebaseAuth mAuth;
    private ProgressBar progressBar;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_signuppage);
        mAuth = FirebaseAuth.getInstance();
        progressBar = findViewById(R.id.progressBar);

        lottie = findViewById(R.id.lotie1);
        name = findViewById(R.id.name);
        email = findViewById(R.id.Email);
        pass = findViewById(R.id.Password);
        address = findViewById(R.id.address);
        phone = findViewById(R.id.phone);
        Signup = findViewById(R.id.signupbtn);
        alreadyhvee = findViewById(R.id.alreadyhv);

        alreadyhvee.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent intent = new Intent(signuppage.this,loginpage.class);
                startActivity(intent);
            }
        });

        if (mAuth.getCurrentUser() != null) {
            Intent intent = new Intent(signuppage.this, home.class);
            startActivity(intent);
            finish();
        }
        Signup.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                String Name = name.getEditText().getText().toString();
                String Email = email.getEditText().getText().toString();
                String Phone = phone.getEditText().getText().toString();
                String Password = pass.getEditText().getText().toString();
                String Address = address.getEditText().getText().toString();

                if (TextUtils.isEmpty(Name)){
                    name.setError("Enter your name");
                    return;
                }
                if (TextUtils.isEmpty(Email)){
                    email.setError("Enter your email");
                    return;
                }
                if (TextUtils.isEmpty(Password)){
                    pass.setError("Please Set a Password");
                    return;
                }
                if (TextUtils.isEmpty(Address)){
                    address.setError("Enter your postal Address");
                    return;
                }
                if (TextUtils.isEmpty(Phone)){
                    phone.setError("Enter your contact number");
                    return;
                }
                progressBar.setVisibility(View.VISIBLE);
                Signup.setVisibility(View.GONE);
                mAuth.createUserWithEmailAndPassword(Email,Password).addOnCompleteListener(new OnCompleteListener<AuthResult>() {
                    @Override
                    public void onComplete(@NonNull Task<AuthResult> task) {

                        if (task.isSuccessful())
                        {
                            Toast.makeText(signuppage.this, "Operation Successful", Toast.LENGTH_SHORT).show();
                            ValidateUser(Name,Email,Password,Phone,Address);
                        }
                        else {
                            Toast.makeText(signuppage.this, "Authentication Failed..."+ task.getException().getMessage(), Toast.LENGTH_SHORT).show();
                            progressBar.setVisibility(View.GONE);
                            Signup.setVisibility(View.VISIBLE);
                        }
                    }
                });


            }
        });


    }

    private void ValidateUser(String name, String email, String password, String phone, String address) {
        final DatabaseReference ref;
        ref = FirebaseDatabase.getInstance().getReference();
        ref.addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot snapshot) {
                if (!(snapshot.child("User").child(FirebaseAuth.getInstance().getCurrentUser().getUid()).exists())){
                    HashMap<String,Object> userhashmap = new HashMap<>();
                    userhashmap.put("Name", name);
                    userhashmap.put("Phone", phone);
                    userhashmap.put("Email", email);
                    userhashmap.put("Password", password);
                    userhashmap.put("Address", address);

                    ref.child("User").child(FirebaseAuth.getInstance()
                                    .getCurrentUser()
                                    .getUid() )
                            .updateChildren(userhashmap)
                            .addOnCompleteListener(new OnCompleteListener<Void>() {
                                @Override
                                public void onComplete(@NonNull Task<Void> task) {
                                    if (task.isSuccessful()){
                                        Toast.makeText(signuppage.this, "Account Created", Toast.LENGTH_SHORT).show();
                                        Intent i = new Intent(signuppage.this, loginpage.class);
//                                        i.putExtra("na", name);
//                                        i.putExtra("adr",address);
//                                        i.putExtra("ph",phone);

                                        startActivity(i);
                                    }
                                    else{
                                        progressBar.setVisibility(View.GONE);
                                        Toast.makeText(signuppage.this, "Error", Toast.LENGTH_SHORT).show();
                                    }
                                }
                            });
                }
            }

            @Override
            public void onCancelled(@NonNull DatabaseError error) {

            }
        });
    }
}